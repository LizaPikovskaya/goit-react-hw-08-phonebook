{"version":3,"file":"static/js/799.21fd5d3f.chunk.js","mappings":"yRAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kJAUVE,EAAQF,EAAAA,GAAAA,MAAH,+HAOLG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,wHAOLK,EAASL,EAAAA,GAAAA,OAAH,6Y,yGCxBNM,EAAYN,EAAAA,GAAAA,GAAH,yFAMTO,EAAQP,EAAAA,GAAAA,GAAH,mF,kKCMZQ,EAAqBC,EAAAA,GAAW,CACpCC,UAAUC,EAAAA,EAAAA,MAASC,IAAI,EAAG,cAAcC,WACxCC,OAAOH,EAAAA,EAAAA,MAASG,MAAM,iBAAiBD,WACvCE,UAAUJ,EAAAA,EAAAA,MAASC,IAAI,EAAG,iCAAiCI,IAAI,GAAI,aAAaH,aAsDlF,EApDyB,WACvB,IAAMI,GAAWC,EAAAA,EAAAA,MASjB,OACE,+BACE,SAAC,KAAD,CACEC,cAAe,CAAEC,KAAM,GAAIN,MAAO,GAAIC,SAAU,IAChDM,SAZe,SAACC,EAAQC,GAC5BC,QAAQC,IAAIH,GACZL,GAASS,EAAAA,EAAAA,IAASJ,IACfK,SACAC,MAAK,kBAAMC,EAAAA,GAAAA,QAAc,4BAApB,IACLC,OAAM,kBAAMD,EAAAA,GAAAA,MAAY,oCAAlB,IACTN,EAAOQ,WACR,EAMKC,iBAAkBxB,EAHpB,UAKE,UAAC,KAAD,CAAYyB,aAAa,MAAzB,WACE,UAAC,KAAD,WAAO,YAEL,SAAC,KAAD,CAAOC,KAAK,OAAOd,KAAK,UACxB,SAAC,KAAD,CACEe,UAAU,MACVf,KAAK,OACLgB,UAAU,sBAGd,UAAC,KAAD,WAAO,SAEL,SAAC,KAAD,CAAOF,KAAK,QAAQd,KAAK,WACzB,SAAC,KAAD,CACEe,UAAU,MACVf,KAAK,QACLgB,UAAU,sBAGd,UAAC,KAAD,WAAO,YAEL,SAAC,KAAD,CAAOF,KAAK,WAAWd,KAAK,cAC5B,SAAC,KAAD,CACEe,UAAU,MACVf,KAAK,WACLgB,UAAU,sBAGd,SAAC,KAAD,CAAQF,KAAK,SAAb,SAAsB,mBAK/B,E,UCxDD,EAVqB,WACnB,OACE,oBAASG,MAAO,CAAEC,WAAY,IAA9B,UACE,UAACC,EAAA,EAAD,YACE,SAAC,IAAD,UAAW,kBACX,SAAC,EAAD,QAIP,C","sources":["components/LoginForm/LoginForm.styled.js","pages/ContactsPage.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormStyled = styled(Form)`\n  margin-top: 20px;\n  max-width: 40%;\n\n  /* display:flex;\nflex-direction:column;\ngap: 20px;\nalign-items: start; */\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 25px;\n  font-size: 22px;\n`;\nexport const Input = styled(Field)`\n  min-height: 40px;\n  padding: 0px 5px;\n  border-radius: 10px;\n  border: 1.5px solid black;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  min-width: 125px;\n  min-height: 45px;\n  padding: 10px;\n  margin-top: 10px;\n  border-radius: 5px;\n  border: none;\n  background-color: lightblue;\n  cursor: pointer;\n  transition: 300ms linear;\n  font-family: 'Helvetica Neue';\n  font-size: 20px;\n  font-weight: 500;\n\n  &:hover {\n    background-color: #4682b4;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\n\n\nexport const MainTitle = styled.h1`\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 700;\n  margin: 30px 0;\n`;","import { ErrorMessage, Formik } from 'formik';\nimport {\n  Button,\n  FormStyled,\n  Input,\n  Label,\n} from '../LoginForm/LoginForm.styled';\nimport {  string} from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/thunk';\nimport { toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n import * as Yup from 'yup';\n\n\nconst registrationSchema = Yup.object({\n  username: string().min(5, 'Too Short!').required(),\n  email: string().email('Invalid email').required(),\n  password: string().min(7, 'Too Short! Minimum 7 symbols.').max(16, 'Too Long!').required(),\n});\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, action) => {\n    console.log(values);\n    dispatch(register(values))\n      .unwrap()\n      .then(() => toast.success('Registration successfully'))\n      .catch(() => toast.error('Something went wrong...Try again.'));\n    action.resetForm();\n  }\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={registrationSchema}\n      >\n        <FormStyled autoComplete=\"off\">\n          <Label>\n            Username\n            <Input type=\"text\" name=\"name\" />\n            <ErrorMessage\n              component=\"div\"\n              name=\"name\"\n              className=\"error-message\"\n            />\n          </Label>\n          <Label>\n            Email\n            <Input type=\"email\" name=\"email\" />\n            <ErrorMessage\n              component=\"div\"\n              name=\"email\"\n              className=\"error-message\"\n            />\n          </Label>\n          <Label>\n            Password\n            <Input type=\"password\" name=\"password\" />\n            <ErrorMessage\n              component=\"div\"\n              name=\"password\"\n              className=\"error-message\"\n            />\n          </Label>\n          <Button type=\"submit\">Register</Button>\n        </FormStyled>\n      </Formik>\n    </>\n  );\n};\n\nexport default RegistrationForm;\n","import { Container } from 'components/Container/Container';\nimport RegistratonForm from 'components/RegistrationForm/RegistrationForm';\nimport { MainTitle } from './ContactsPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <section style={{ paddingTop: 40 }}>\n      <Container>\n        <MainTitle>Registration</MainTitle>\n        <RegistratonForm />\n      </Container>\n    </section>\n  );\n};\nexport default RegisterPage;\n"],"names":["FormStyled","styled","Form","Label","Input","Field","Button","MainTitle","Title","registrationSchema","Yup","username","string","min","required","email","password","max","dispatch","useDispatch","initialValues","name","onSubmit","values","action","console","log","register","unwrap","then","toast","catch","resetForm","validationSchema","autoComplete","type","component","className","style","paddingTop","Container"],"sourceRoot":""}