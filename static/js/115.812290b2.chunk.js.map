{"version":3,"file":"static/js/115.812290b2.chunk.js","mappings":"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","sources":["components/Phonebook/Phonebook.styled.js","redux/contacts/selectors.js","components/Phonebook/Phonebook.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","pages/ContactsPage.jsx","pages/ContactsPage.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 40%;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 25px;\n\n  input {\n    min-height: 40px;\n    padding: 0px 5px;\n    border-radius:10px;\n    border: 1.5px solid black;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  min-width: 125px;\n  min-height: 45px;\n  padding: 10px;\n  border-radius: 5px;\n  border: none;\n  background-color: lightblue;\n  cursor: pointer;\n  transition: 300ms linear;\n  font-family: 'Helvetica Neue';\n  font-weight: 500;\n\n  &:hover {\n    background-color: #4682b4;\n    color: white;\n  }\n`;\n","export const selectContacts = state => state.contacts;\nexport const selectFilter = state => state.filter;\n\n","import { useState } from 'react';\nimport { Button, Label, Wrapper } from './Phonebook.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/thunk';\nimport { AddingLoader } from 'components/Loader/Loader';\n\nexport const Phonebook = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const { items: contacts, isAdding } = useSelector(selectContacts);\n  const handleOnChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error();\n    }\n  };\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    if (!name.trim() || !number.trim())\n      return toast.warn('Please,fill the field.');\n    const arrayOfNames = [];\n    contacts.forEach(user => {\n      arrayOfNames.push(user.name.toLowerCase());\n    });\n    if (arrayOfNames.includes(name.toLowerCase())) {\n      return toast.warn(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Wrapper>\n      <form onSubmit={handleOnSubmit}>\n        <Label>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleOnChange}\n          />\n        </Label>\n        <Label>\n          <span>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleOnChange}\n          />\n        </Label>\n\n        <Button type=\"submit\" disabled={isAdding}>\n          {isAdding ? <AddingLoader /> : 'Add contact'}\n        </Button>\n      </form>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 35px;\n  width: 40%;\n\n  input {\n    min-height: 40px;\n    padding: 0px 5px;\n    border-radius: 10px;\n    border: 1.5px solid black;\n  }\n`;\n","import { Label } from './Filter.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterUser } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n  const changeFilter = ({ target }) => {\n    setFilter(target.value);\n    dispatch(filterUser(target.value));\n  };\n  return (\n    <Label>\n      <span>Find contacts by name</span>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={changeFilter} />\n    </Label>\n  );\n};\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChangeFilter: PropTypes.func,\n// };\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  /* padding: 0; */\n\n  li {\n    display: flex;\n    font-size: 18px;\n    align-items: center;\n    justify-content: space-between;\n    gap: 30px;\n  }\n  & li:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n    min-width: 80px;\n    padding: 5px 10px;\n    border-radius: 5px;\n    border: none;\n    background-color: lightblue;\n    cursor: pointer;\n    transition: 300ms linear;\n    font-family: 'Helvetica Neue';\n    font-weight: 500;\n    font-size: 18px;\n\n    &:hover {\n      background-color: #4682b4;\n      color: white;\n    }\n  }\n`;\n","import { Wrapper } from 'components/Phonebook/Phonebook.styled';\nimport { List } from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { useEffect, useState } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/thunk';\nimport { DeletingLoader } from 'components/Loader/Loader';\n\nexport const Contacts = () => {\n  const [idToDelete, setIdToDelete] = useState(null);\n  const { items, isDeleting, error } = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const filterUser = () => {\n    return items?.filter(({ name }) =>\n      name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  };\n\n  const visibleUsers = filterUser();\n  return (\n    <Wrapper>\n      {/* {isLoading && <Loader />} */}\n      {error && <p>{error}</p>}\n      {items && (\n        <List>\n          {visibleUsers?.map(({ id, name, number }) => (\n            <li key={id}>\n              {name}: {number}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setIdToDelete(id);\n                  dispatch(deleteContact(id)).then(() => {\n                    setIdToDelete(null);\n                  });\n                }}\n              >\n                {isDeleting && idToDelete === id ? (\n                  <DeletingLoader />\n                ) : (\n                  'Delete'\n                )}\n              </button>{' '}\n            </li>\n          ))}\n        </List>\n      )}\n    </Wrapper>\n  );\n};\n","import { Phonebook } from \"components/Phonebook/Phonebook\";\nimport { MainTitle, Title } from \"./ContactsPage.styled\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Contacts } from \"components/Contacts/Contacts\";\nimport { Container } from \"components/Container/Container\";\n// import { useSelector } from \"react-redux\";\n// import { selectLoading } from \"redux/auth/selectors\";\n\nconst ContactsPage = () => {\n  // const isLoading = useSelector(selectLoading)\n  return (\n    <section style={{paddingTop: 40}}>\n      <Container>\n        <MainTitle>Phonebook</MainTitle>\n        <Phonebook />\n        <Title>Contacts</Title>\n        <Filter />\n        <Contacts />\n      </Container>\n    </section>\n  );\n};\n\nexport default ContactsPage;\n","import styled from 'styled-components';\n\n\nexport const MainTitle = styled.h1`\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 700;\n  margin: 30px 0;\n`;"],"names":["Wrapper","styled","Label","Button","selectContacts","state","contacts","selectFilter","filter","Phonebook","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","items","isAdding","handleOnChange","target","value","Error","reset","onSubmit","event","preventDefault","trim","toast","arrayOfNames","forEach","user","push","toLowerCase","includes","addContact","type","pattern","title","required","onChange","disabled","Filter","setFilter","filterUser","List","Contacts","idToDelete","setIdToDelete","isDeleting","error","filterValue","useEffect","fetchContacts","visibleUsers","map","id","onClick","deleteContact","then","style","paddingTop","Container","MainTitle","Title"],"sourceRoot":""}